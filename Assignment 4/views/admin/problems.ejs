<style>
    .filter-controls {
    margin: 20px 0;
    padding: 10px;
    background-color: #f8f9fa;
    border-radius: 5px;
}

.filter-controls select {
    min-width: 200px;
}

.form-inline {
    display: flex;
    gap: 10px;
    align-items: center;
}

</style>

<div class="filter-controls mb-3">
    <form class="form-inline">
        <select class="form-control mr-2" name="filterAnswered" onchange="this.form.submit()">
            <option value="">All Problems</option>
            <option value="true" <%= currentFilter === 'true' ? 'selected' : '' %>>Answered</option>
            <option value="false" <%= currentFilter === 'false' ? 'selected' : '' %>>Pending</option>
        </select>
    </form>
</div>


<div class="problems-list">
    <h2>Customer Problems</h2>
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Problem</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <% problems.forEach(problem=> { %>
                <tr  id="problem-<%= problem._id %>"> 
                    <td>
                        <%= problem.name %>
                    </td>
                    <td>
                        <%= problem.email %>
                    </td>
                    <td>
                        <%= problem.message %>
                    </td>
                    <td>
                        <%= problem.isAnswered ? 'Answered' : 'Pending' %>
                    </td>
                    <td>
                        <% if (!problem.isAnswered) { %>
                            <button class="btn btn-primary btn-sm answer-btn" onclick="showAnswerForm('<%= problem._id %>')">
                                Answer
                            </button>
                            <div id="answer-form-<%= problem._id %>" style="display: none;" class="mt-2">
                                <textarea id="answer-<%= problem._id %>" class="form-control mb-2" rows="3"></textarea>
                                <button class="btn btn-success btn-sm" onclick="submitAnswer('<%= problem._id %>')">
                                    Submit Answer
                                </button>
                            </div>
                        <% } else { %>
                            <button class="btn btn-danger btn-sm delete-btn" data-id="<%= problem._id %>">
                                Delete
                            </button>
                        <% } %>
                    </td>
                </tr>
                <% }) %>
        </tbody>
    </table>
</div>
<script>
  function showAnswerForm(id) {
    document.getElementById(`answer-form-${id}`).style.display = 'block';
}

async function submitAnswer(id) {
    const answer = document.getElementById(`answer-${id}`).value;
    console.log(`Submitting answer for ID: ${id}, Answer: ${answer}`); // Debug log
    try {
        const response = await fetch(`/admin/problems/${id}/answer`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ answer })
        });
        console.log('Response:', response); // Debug log
        if (response.ok) {
            alert('Answer sent successfully!');
            location.reload();
        } else {
            const errorData = await response.json();
            alert(`Error: ${errorData.message}`);
        }
    } catch (error) {
        console.error('Fetch error:', error);
        alert('Error sending answer');
    }
}

    document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', async function () {
            const problemId = this.getAttribute('data-id');
            if (confirm('Are you sure you want to delete this problem?')) {
                try {
                    const response = await fetch(`/admin/problems/${problemId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        // Remove the row from the table
                        const row = document.getElementById(`problem-${problemId}`);
                        if (row) {
                            row.remove();
                        }
                    } else {
                        const errorData = await response.json();
                        alert(`Failed to delete the problem: ${errorData.message}`);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the problem');
                }
            }
        });
    });
});

</script>